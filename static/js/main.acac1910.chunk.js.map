{"version":3,"sources":["navbarr.jsx","features/users/userlist.js","features/users/userdetail.js","sidebar.js","features/card/dashboardcard.js","features/chart/linechart.js","features/chart/doughNutChart.js","features/dashboard/dashboard.js","features/modal/edituser.js","features/datafromsql/addnewuser.js","features/datafromsql/userlist.js","App.js","serviceWorker.js","index.js"],"names":["Navbarr","props","useState","isActive","setisActive","className","role","aria-label","sidebar","onClick","clicked","class","href","width","height","aria-expanded","data-target","aria-hidden","id","to","Userlist","users","setusers","useEffect","unmounted","Axios","get","then","res","data","catch","err","console","log","userList","map","user","key","name","email","Userdetail","match","params","username","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","setuser","Sidebar","sideclose","sidebarClass","setSidebarClass","activeClassName","Dashboardcard","bgcolor","value","content","icon","Linechart","labels","datasets","label","borderColor","backgroundColor","pointBackgroundColr","pointBorderColor","options","title","display","text","scales","yAxes","ticks","min","max","stepSize","DoughnutChart","Dashboard","icon1","icon2","icon3","Edituser","visible","handleVisibility","selecteduser","handleRender","handleSubmit","e","a","preventDefault","post","onSubmit","type","placeholder","onChange","target","Addnewuser","render","initialstate","Userlistfromsql","setrender","setvisible","selectedUser","setselectedUser","delete","handleEdit","App","sideToggler","setsideToggler","onChangeHandler","exact","path","component","from","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.acac1910.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Navbarr(props) {\r\n  const [isActive, setisActive] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <nav\r\n        className=\"navbar is-dark is-fixed-top is-transparent\"\r\n        role=\"navigation\"\r\n        aria-label=\"main navigation\"\r\n      >\r\n        <div className=\"navbar-brand\">\r\n          {props.sidebar ? (\r\n            <div\r\n              className=\"button is-dark mt-4 ml-2  p-4\"\r\n              onClick={() => props.clicked()}\r\n            >\r\n              <i class=\"fas fa-bars\"></i>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <a className=\"navbar-item\" href=\"https://bulma.io\">\r\n            <i\r\n              className=\"far fa-address-book is-size-2 m-2\"\r\n              width=\"112\"\r\n              height=\"28\"\r\n            ></i>\r\n            <h2 className=\"is-size-5\">Address Book</h2>\r\n          </a>\r\n\r\n          <div\r\n            role=\"button\"\r\n            className={`navbar-burger is-black mt-2 burger${\r\n              isActive ? \"is-active\" : \"\"\r\n            }`}\r\n            aria-label=\"menu\"\r\n            aria-expanded=\"false\"\r\n            data-target=\"navbarBasicExample\"\r\n            onClick={() => setisActive(!isActive)}\r\n          >\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          id=\"navbarBasicExample\"\r\n          className={`navbar-menu${isActive ? \"is-active\" : \"\"}`}\r\n        >\r\n          <div className=\"navbar-end\">\r\n            <NavLink className=\"navbar-item\" to=\"/users\">\r\n              Users\r\n            </NavLink>\r\n\r\n            <div className=\"navbar-item\">Documentation</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Userlist() {\r\n  const [users, setusers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    Axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((res) => {\r\n        if (!unmounted) {\r\n          setusers(res.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (!unmounted) {\r\n          console.log(err);\r\n        }\r\n      });\r\n    return () => {\r\n      unmounted = true;\r\n    };\r\n  }, []);\r\n\r\n  const userList = users.map((user) => (\r\n    <tr key={user.id}>\r\n      <td>{user.id}</td>\r\n      <td>{user.name}</td>\r\n      <td>{user.email}</td>\r\n      <td>\r\n        <NavLink className=\"button is-link is-rounded\" to={`users/${user.id}`}>\r\n          Details\r\n        </NavLink>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <div className=\"margin m-4 p-5 has-text-centered\">\r\n      <div className=\"table-container\">\r\n        <table className=\"table is-bordered  is-fullwidth has-background-light\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"has-text-link\">S No:</th>\r\n              <th className=\"has-text-link\">Name</th>\r\n              <th className=\"has-text-link\">email</th>\r\n              <th className=\"has-text-link\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{userList}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function Userdetail({ match }) {\r\n  const { id } = match.params;\r\n  const initial = {\r\n    id: \"\",\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    address: {\r\n      street: \"\",\r\n      suite: \"\",\r\n      city: \"\",\r\n      zipcode: \"\",\r\n      geo: {\r\n        lat: \"\",\r\n        lng: \"\",\r\n      },\r\n    },\r\n    phone: \"\",\r\n    website: \"\",\r\n    company: {\r\n      name: \"\",\r\n      catchPhrase: \"\",\r\n      bs: \"\",\r\n    },\r\n  };\r\n  const [user, setuser] = useState(initial);\r\n  useEffect(() => {\r\n    Axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then((res) => {\r\n        setuser(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [id]);\r\n  return (\r\n    <div className=\"margin m-4 p-5\">\r\n      <div className=\"columns is-centered\">\r\n        <div className=\"column is-half \">\r\n          <div className=\"card boxShadow has-background-light  has-text-centered\">\r\n            <div className=\"card-header  is-4\">\r\n              <p className=\"card-header-title has-background-info is-centered\">\r\n                {\" \"}\r\n                User Detail\r\n              </p>\r\n            </div>\r\n            <div className=\"card-centent\">\r\n              <h2>\r\n                Name :<strong> {user.name}</strong>\r\n              </h2>\r\n              <h2>\r\n                UserName : <strong> {user.username}</strong>\r\n              </h2>\r\n              <h2>\r\n                Email : <strong> {user.email}</strong>\r\n              </h2>\r\n              <h2 className=\"is-size-5\">Address </h2>\r\n              <h2>\r\n                Street : <strong> {user.address.street}</strong>\r\n              </h2>\r\n              <h2>\r\n                Suite : <strong> {user.address.suite}</strong>\r\n              </h2>\r\n              <h2>\r\n                City : <strong> {user.address.city}</strong>\r\n              </h2>\r\n              <h2>\r\n                Zip Code : <strong> {user.address.zipcode}</strong>\r\n              </h2>\r\n              <h2 className=\"is-size-5\">Geo </h2>\r\n              <h2>\r\n                lat : <strong> {user.address.geo.lat}</strong>\r\n              </h2>\r\n              <h2>\r\n                lng : <strong> {user.address.geo.lng}</strong>\r\n              </h2>\r\n              <h2>\r\n                Phone Number : <strong> {user.phone}</strong>\r\n              </h2>\r\n              <h2>\r\n                Website : <strong> {user.website}</strong>\r\n              </h2>\r\n\r\n              <h2 className=\"is-size-5\">Company </h2>\r\n              <h2>\r\n                Name : <strong> {user.company.name}</strong>\r\n              </h2>\r\n              <h2>\r\n                Catch Phrase : <strong> {user.company.catchPhrase}</strong>\r\n              </h2>\r\n              <h2>\r\n                Bs : <strong> {user.company.bs}</strong>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Sidebar({ sideclose, clicked }) {\r\n  const [sidebarClass, setSidebarClass] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (sideclose) {\r\n      setSidebarClass(\"sidebar close\");\r\n    } else {\r\n      setSidebarClass(\"sidebar  has-background-dark\");\r\n    }\r\n  }, [sideclose]);\r\n  return (\r\n    <div className={sidebarClass}>\r\n      <aside className=\"menu\">\r\n        <p className=\"menu-label has-text-white\">\r\n          General\r\n          <button\r\n            className=\"sidebarclosebtn delete is-large\"\r\n            onClick={() => {\r\n              clicked();\r\n            }}\r\n          ></button>\r\n        </p>\r\n        <ul className=\"menu-list\">\r\n          <li>\r\n            <NavLink\r\n              to=\"/dashboard\"\r\n              activeClassName=\"has-background-light has-text-dark\"\r\n            >\r\n              <i className=\"fas fa-tachometer-alt has-text-info\"></i>\r\n              <p className=\"is-inline p-2\">Dashboard</p>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/users\"\r\n              activeClassName=\"has-background-light has-text-dark\"\r\n            >\r\n              <i className=\"fas fa-users has-text-info\"></i>{\" \"}\r\n              <p className=\"is-inline p-2\">Users</p>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/test\"\r\n              activeClassName=\"has-background-light has-text-dark\"\r\n            >\r\n              <i className=\"fas fa-users has-text-info\"></i>{\" \"}\r\n              <p className=\"is-inline p-2\">Users From sql</p>\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </aside>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Dashboardcard({ bgcolor, value, content, icon }) {\r\n  return (\r\n    <div className=\"\">\r\n      <div className={`card boxShadow  ${bgcolor} `}>\r\n        <div className=\"card-content\">\r\n          <div className=\"content\">\r\n            <div className=\"is-size-6\">{content}</div>\r\n            <div className=\"is-size-1 is-inline mr-2\">{value}</div>\r\n            <span className=\"icon is-inline ml-5 is-size-1\">{icon}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboardcard;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nfunction Linechart() {\r\n  const data = {\r\n    labels: [\"Pak\", \"Ind\", \"Usa\", \"Eng\", \"SA\"],\r\n    datasets: [\r\n      {\r\n        label: \"Contact In 2020\",\r\n        data: [100, 400, 200, 300, 100],\r\n        borderColor: [\"rgba(54,162,235,0.2)\"],\r\n        backgroundColor: [\"rgba(54,162,235,0.2)\"],\r\n        pointBackgroundColr: \"rgba(54,162,235,0.2)\",\r\n        pointBorderColor: [\"rgba(54,162,235,0.2)\"],\r\n      },\r\n      {\r\n        label: \"Contact In 2019\",\r\n        data: [200, 300, 500, 100, 400],\r\n        borderColor: [\"rgba(255,206,90,0.5)\"],\r\n        backgroundColor: [\"rgba(255,206,90,0.5)\"],\r\n        pointBackgroundColr: \"rgba(255,206,90,0.5)\",\r\n        pointBorderColor: [\"rgba(255,206,90,0.5)\"],\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    title: {\r\n      display: true,\r\n      text: \"Contact Per Country Per Year\",\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            min: 0,\r\n            max: 600,\r\n            stepSize: 50,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <div className=\"boxShadow\">\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Linechart;\r\n","import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nfunction DoughnutChart() {\r\n  const data = {\r\n    labels: [\"Pak\", \"Ind\", \"Usa\", \"Eng\", \"SA\"],\r\n    datasets: [\r\n      {\r\n        label: \"Contact In 2020\",\r\n        data: [100, 400, 200, 300, 100],\r\n\r\n        backgroundColor: [\r\n          \"rgba(54,162,235,1)\",\r\n          \"rgba(255,99,132,1)\",\r\n          \"rgba(255,205,86,1)\",\r\n          \"rgba(255,159,64,1)\",\r\n          \"rgba(153,102,255,1)\",\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    title: {\r\n      display: true,\r\n      text: \"Contacts Per Country\",\r\n    },\r\n  };\r\n  return (\r\n    <div className=\"boxShadow\">\r\n      <Doughnut data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoughnutChart;\r\n","import React from \"react\";\r\nimport Dashboardcard from \"../card/dashboardcard\";\r\nimport Linechart from \"../chart/linechart\";\r\nimport DoughnutChart from \"../chart/doughNutChart\";\r\n\r\nexport default function Dashboard() {\r\n  const icon1 = <i className=\"fas fa-users\"></i>;\r\n  const icon2 = <i className=\"fas fa-flag-usa\"></i>;\r\n  const icon3 = <i className=\"fas fa-graduation-cap\"></i>;\r\n  return (\r\n    <div className=\"margin m-4 p-5\">\r\n      <div className=\"columns\">\r\n        <div className=\"column\">\r\n          <Dashboardcard\r\n            bgcolor={\"has-background-danger has-text-white\"}\r\n            value={\"56950\"}\r\n            content={\"Total Contacts\"}\r\n            icon={icon1}\r\n          />\r\n        </div>\r\n        <div className=\"column \">\r\n          {\" \"}\r\n          <Dashboardcard\r\n            bgcolor={\"has-background-warning has-text-dark\"}\r\n            value={\"5650\"}\r\n            content={\"Total Contacts in US\"}\r\n            icon={icon2}\r\n          />\r\n        </div>\r\n        <div className=\"column \">\r\n          {\" \"}\r\n          <Dashboardcard\r\n            bgcolor={\"has-background-link has-text-white\"}\r\n            value={\"5950\"}\r\n            content={\"Total Contacts of Graduated People\"}\r\n            icon={icon3}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"columns\">\r\n        <div className=\"column\">\r\n          <Linechart />\r\n        </div>\r\n        <div className=\"column\">\r\n          <DoughnutChart />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Edituser({ visible, handleVisibility, selecteduser, handleRender }) {\r\n  const [user, setuser] = useState(selecteduser);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await Axios.post(`http://localhost:5000/${user.id}`, user);\r\n      handleRender();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    handleVisibility();\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={\"modal \" + (visible ? \"is-block\" : \"is-invisibility\")}>\r\n        <div className=\"modal-background\" onClick={handleVisibility}></div>\r\n        <div className=\"modal-content\">\r\n          <div className=\"section wrapper has-background-light\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Username</label>\r\n                <div className=\"control has-icons-left\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Text input\"\r\n                    value={user.name}\r\n                    onChange={(e) => setuser({ ...user, name: e.target.value })}\r\n                  />\r\n                  <span className=\"icon is-small is-left\">\r\n                    <i className=\"fas fa-user\"></i>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"field\">\r\n                <label className=\"label\">Email</label>\r\n                <div className=\"control has-icons-left\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email input\"\r\n                    value={user.email}\r\n                    onChange={(e) =>\r\n                      setuser({ ...user, email: e.target.value })\r\n                    }\r\n                  />\r\n                  <span className=\"icon is-small is-left\">\r\n                    <i className=\"fas fa-envelope\"></i>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"field\">\r\n                <div className=\"control\">\r\n                  <button\r\n                    className=\"button is-primary is-rounded\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"modal-close is-large\"\r\n          aria-label=\"close\"\r\n          onClick={handleVisibility}\r\n        ></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Edituser;\r\n","import userEvent from \"@testing-library/user-event\";\r\nimport Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Addnewuser({ render }) {\r\n  const initialstate = {\r\n    name: \"\",\r\n    email: \"\",\r\n  };\r\n  const [user, setuser] = useState(initialstate);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { name, email } = user;\r\n    if (name !== \"\" && email !== \"\") {\r\n      try {\r\n        await Axios.post(\"http://localhost:5000/\", user);\r\n        render();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n\r\n      setuser(initialstate);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"field\">\r\n          <label className=\"label\">Username</label>\r\n          <div className=\"control has-icons-left\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              placeholder=\"Text input\"\r\n              value={user.name}\r\n              onChange={(e) => setuser({ ...user, name: e.target.value })}\r\n            />\r\n            <span className=\"icon is-small is-left\">\r\n              <i className=\"fas fa-user\"></i>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label className=\"label\">Email</label>\r\n          <div className=\"control has-icons-left\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"email\"\r\n              placeholder=\"Email input\"\r\n              value={user.email}\r\n              onChange={(e) => setuser({ ...user, email: e.target.value })}\r\n            />\r\n            <span className=\"icon is-small is-left\">\r\n              <i className=\"fas fa-envelope\"></i>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"control\">\r\n            <button className=\"button is-primary is-rounded \" type=\"submit\">\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Addnewuser;\r\n","import Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Edituser from \"../modal/edituser\";\r\nimport Addnewuser from \"./addnewuser\";\r\n\r\nfunction Userlistfromsql() {\r\n  //initialize users as array\r\n  const [users, setusers] = useState([]);\r\n  //render variable is use for useEffect rendering\r\n  const [render, setrender] = useState(false);\r\n\r\n  //for modal visibility\r\n  const [visible, setvisible] = useState(false);\r\n\r\n  //select user for edit\r\n  const [selectedUser, setselectedUser] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  //useEffect use to get datafrom sql on first render\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000\")\r\n      .then((res) => {\r\n        setusers(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [render]);\r\n\r\n  //handleDelete function use to delete user from sql database\r\n  const handleDelete = (id) => {\r\n    Axios.delete(`http://localhost:5000/${id}`)\r\n      .then((res) => {\r\n        handleRender();\r\n      })\r\n      .catch((err) => console.log(\"error in deletion\"));\r\n  };\r\n\r\n  //handleRender function use for change the value of render after any sql query execute\r\n  const handleRender = () => {\r\n    setrender(!render);\r\n  };\r\n\r\n  const handleVisibility = () => {\r\n    setvisible(!visible);\r\n  };\r\n\r\n  const handleEdit = (user) => {\r\n    setselectedUser(user);\r\n    handleVisibility();\r\n  };\r\n\r\n  const userList = users.map((user) => (\r\n    <tr key={user.id}>\r\n      <td>{user.id}</td>\r\n      <td>{user.name}</td>\r\n      <td>{user.email}</td>\r\n      <td>\r\n        <div className=\"button is-danger\" onClick={() => handleDelete(user.id)}>\r\n          Delete\r\n        </div>\r\n        <div\r\n          className=\"button is-success ml-2\"\r\n          onClick={() => handleEdit(user)}\r\n        >\r\n          Edit\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <div className=\"margin m-4 p-5\">\r\n      <div className=\"section row has-background-light\">\r\n        <Addnewuser render={handleRender} />\r\n      </div>\r\n      <div className=\"section row mt-3 has-background-light\">\r\n        <div className=\"table-container\">\r\n          <table className=\"table is-bordered  is-fullwidth has-background-light\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"has-text-link\">S No:</th>\r\n                <th className=\"has-text-link\">Name</th>\r\n                <th className=\"has-text-link\">email</th>\r\n                <th className=\"has-text-link\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{userList}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      {visible ? (\r\n        <Edituser\r\n          visible={visible}\r\n          handleVisibility={handleVisibility}\r\n          selecteduser={selectedUser}\r\n          handleRender={handleRender}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Userlistfromsql;\r\n","import React, { useState } from \"react\";\nimport Navbarr from \"./navbarr\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Userlist from \"./features/users/userlist\";\nimport Userdetail from \"./features/users/userdetail\";\nimport Sidebar from \"./sidebar\";\nimport Dashboard from \"./features/dashboard/dashboard\";\nimport Userlistfromsql from \"./features/datafromsql/userlist\";\n\nexport default function App() {\n  const [sideToggler, setsideToggler] = useState(false);\n\n  const onChangeHandler = () => {\n    setsideToggler(!sideToggler);\n  };\n\n  return (\n    <Router>\n      <Navbarr clicked={onChangeHandler} sidebar={sideToggler} />\n\n      <div className=\"columns\">\n        <div className=\"column is-one-fifth\">\n          <Sidebar sideclose={sideToggler} clicked={onChangeHandler} />\n        </div>\n\n        <div className=\"column\">\n          <Switch>\n            <Route exact path=\"/users\" component={Userlist} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/test\" component={Userlistfromsql} />\n            <Route exact path=\"/users/:id\" component={Userdetail} />\n            <Redirect from=\"/\" to=\"/dashboard\" />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}